#include "internal.hpp"
#include <stdexcept>

void ThrowOSErr(OSErr err) {
  switch (err) {
  case kOTOutOfMemoryErr:
    throw std::runtime_error("kOTOutOfMemoryErr");
  case kOTNotFoundErr:
    throw std::runtime_error("kOTNotFoundErr");
  case kOTDuplicateFoundErr:
    throw std::runtime_error("kOTDuplicateFoundErr");
  case kOTBadAddressErr:
    throw std::runtime_error("kOTBadAddressErr");
  case kOTBadOptionErr:
    throw std::runtime_error("kOTBadOptionErr");
  case kOTAccessErr:
    throw std::runtime_error("kOTAccessErr");
  case kOTBadReferenceErr:
    throw std::runtime_error("kOTBadReferenceErr");
  case kOTNoAddressErr:
    throw std::runtime_error("kOTNoAddressErr");
  case kOTOutStateErr:
    throw std::runtime_error("kOTOutStateErr");
  case kOTBadSequenceErr:
    throw std::runtime_error("kOTBadSequenceErr");
  case kOTSysErrorErr:
    throw std::runtime_error("kOTSysErrorErr");
  case kOTLookErr:
    throw std::runtime_error("kOTLookErr");
  case kOTBadDataErr:
    throw std::runtime_error("kOTBadDataErr");
  case kOTBufferOverflowErr:
    throw std::runtime_error("kOTBufferOverflowErr");
  case kOTFlowErr:
    throw std::runtime_error("kOTFlowErr");
  case kOTNoDataErr:
    throw std::runtime_error("kOTNoDataErr");
  case kOTNoDisconnectErr:
    throw std::runtime_error("kOTNoDisconnectErr");
  case kOTNoUDErrErr:
    throw std::runtime_error("kOTNoUDErrErr");
  case kOTBadFlagErr:
    throw std::runtime_error("kOTBadFlagErr");
  case kOTNoReleaseErr:
    throw std::runtime_error("kOTNoReleaseErr");
  case kOTNotSupportedErr:
    throw std::runtime_error("kOTNotSupportedErr");
  case kOTStateChangeErr:
    throw std::runtime_error("kOTStateChangeErr");
  case kOTNoStructureTypeErr:
    throw std::runtime_error("kOTNoStructureTypeErr");
  case kOTBadNameErr:
    throw std::runtime_error("kOTBadNameErr");
  case kOTBadQLenErr:
    throw std::runtime_error("kOTBadQLenErr");
  case kOTAddressBusyErr:
    throw std::runtime_error("kOTAddressBusyErr");
  case kOTIndOutErr:
    throw std::runtime_error("kOTIndOutErr");
  case kOTProviderMismatchErr:
    throw std::runtime_error("kOTProviderMismatchErr");
  case kOTResQLenErr:
    throw std::runtime_error("kOTResQLenErr");
  case kOTResAddressErr:
    throw std::runtime_error("kOTResAddressErr");
  case kOTQFullErr:
    throw std::runtime_error("kOTQFullErr");
  case kOTProtocolErr:
    throw std::runtime_error("kOTProtocolErr");
  case kOTBadSyncErr:
    throw std::runtime_error("kOTBadSyncErr");
  case kOTCanceledErr:
    throw std::runtime_error("kOTCanceledErr");
  case kEPERMErr:
    throw std::runtime_error("kEPERMErr");
  case kENORSRCErr:
    throw std::runtime_error("kENORSRCErr");
  case kEINTRErr:
    throw std::runtime_error("kEINTRErr");
  case kEIOErr:
    throw std::runtime_error("kEIOErr");
  case kENXIOErr:
    throw std::runtime_error("kENXIOErr");
  case kEBADFErr:
    throw std::runtime_error("kEBADFErr");
  case kEAGAINErr:
    throw std::runtime_error("kEAGAINErr");
  case kEACCESErr:
    throw std::runtime_error("kEACCESErr");
  case kEFAULTErr:
    throw std::runtime_error("kEFAULTErr");
  case kEBUSYErr:
    throw std::runtime_error("kEBUSYErr");
  case kENODEVErr:
    throw std::runtime_error("kENODEVErr");
  case kEINVALErr:
    throw std::runtime_error("kEINVALErr");
  case kENOTTYErr:
    throw std::runtime_error("kENOTTYErr");
  case kEPIPEErr:
    throw std::runtime_error("kEPIPEErr");
  case kERANGEErr:
    throw std::runtime_error("kERANGEErr");
  case kEWOULDBLOCKErr:
    throw std::runtime_error("kEWOULDBLOCKErr or kEDEADLKErr");
  case kEALREADYErr:
    throw std::runtime_error("kEALREADYErr");
  case kENOTSOCKErr:
    throw std::runtime_error("kENOTSOCKErr");
  case kEDESTADDRREQErr:
    throw std::runtime_error("kEDESTADDRREQErr");
  case kEMSGSIZEErr:
    throw std::runtime_error("kEMSGSIZEErr");
  case kEPROTOTYPEErr:
    throw std::runtime_error("kEPROTOTYPEErr");
  case kENOPROTOOPTErr:
    throw std::runtime_error("kENOPROTOOPTErr");
  case kEPROTONOSUPPORTErr:
    throw std::runtime_error("kEPROTONOSUPPORTErr");
  case kESOCKTNOSUPPORTErr:
    throw std::runtime_error("kESOCKTNOSUPPORTErr");
  case kEOPNOTSUPPErr:
    throw std::runtime_error("kEOPNOTSUPPErr");
  case kEADDRINUSEErr:
    throw std::runtime_error("kEADDRINUSEErr");
  case kEADDRNOTAVAILErr:
    throw std::runtime_error("kEADDRNOTAVAILErr");
  case kENETDOWNErr:
    throw std::runtime_error("kENETDOWNErr");
  case kENETUNREACHErr:
    throw std::runtime_error("kENETUNREACHErr");
  case kENETRESETErr:
    throw std::runtime_error("kENETRESETErr");
  case kECONNABORTEDErr:
    throw std::runtime_error("kECONNABORTEDErr");
  case kECONNRESETErr:
    throw std::runtime_error("kECONNRESETErr");
  case kENOBUFSErr:
    throw std::runtime_error("kENOBUFSErr");
  case kEISCONNErr:
    throw std::runtime_error("kEISCONNErr");
  case kENOTCONNErr:
    throw std::runtime_error("kENOTCONNErr");
  case kESHUTDOWNErr:
    throw std::runtime_error("kESHUTDOWNErr");
  case kETOOMANYREFSErr:
    throw std::runtime_error("kETOOMANYREFSErr");
  case kETIMEDOUTErr:
    throw std::runtime_error("kETIMEDOUTErr");
  case kECONNREFUSEDErr:
    throw std::runtime_error("kECONNREFUSEDErr");
  case kEHOSTDOWNErr:
    throw std::runtime_error("kEHOSTDOWNErr");
  case kEHOSTUNREACHErr:
    throw std::runtime_error("kEHOSTUNREACHErr");
  case kEPROTOErr:
    throw std::runtime_error("kEPROTOErr");
  case kETIMEErr:
    throw std::runtime_error("kETIMEErr");
  case kENOSRErr:
    throw std::runtime_error("kENOSRErr");
  case kEBADMSGErr:
    throw std::runtime_error("kEBADMSGErr");
  case kECANCELErr:
    throw std::runtime_error("kECANCELErr");
  case kENOSTRErr:
    throw std::runtime_error("kENOSTRErr");
  case kENODATAErr:
    throw std::runtime_error("kENODATAErr");
  case kEINPROGRESSErr:
    throw std::runtime_error("kEINPROGRESSErr");
  case kESRCHErr:
    throw std::runtime_error("kESRCHErr");
  case kENOMSGErr:
    throw std::runtime_error("kENOMSGErr");
  case kOTClientNotInittedErr:
    throw std::runtime_error("kOTClientNotInittedErr");
  case kOTPortHasDiedErr:
    throw std::runtime_error("kOTPortHasDiedErr");
  case kOTPortWasEjectedErr:
    throw std::runtime_error("kOTPortWasEjectedErr");
  case kOTBadConfigurationErr:
    throw std::runtime_error("kOTBadConfigurationErr");
  case kOTConfigurationChangedErr:
    throw std::runtime_error("kOTConfigurationChangedErr");
  case kOTUserRequestedErr:
    throw std::runtime_error("kOTUserRequestedErr");
  case kOTPortLostConnection:
    throw std::runtime_error("kOTPortLostConnection");
  }
}